{% extends "base.html.twig" %}

{% block title %}
	Paiement commande
{% endblock %}

{% block stylesheet %}
	<link rel="stylesheet" href="{{ asset('stripeStyle.css') }}">
{% endblock %}

{% block body %}

	<h1>Paiement avec Stripe</h1>
	<!-- Display a payment form -->
	<form id="payment-form">
		<div
			id="payment-element"><!--Stripe.js injects the Payment Element-->
		</div>
		<button id="submit" class="btn btn-success">
			<div class="spinner hidden" id="spinner"></div>
			<span id="button-text">Payer maintenant</span>
		</button>
		<div id="payment-message" class="hidden"></div>
	</form>
{% endblock %}
{% block javascripts %}
	{{ parent() }}
	<script src="https://js.stripe.com/v3/"></script>
	<script>

		// This is your test publishable API key.
const stripe = Stripe("pk_test_51HuZh4HOGLEoTRaLzKNucB0EipnE3DVnWS2i4Kp7hrR3EQhNVJoLulZTe5N84e17wnwQ0MEhOp65L2kQIPwN8rrH00E1KJ3PLz");
// On récupère la clé secrète passé par le controller à TWIG, comme présenté dans la vidéo
const clientSecret = "{{ clientSecret }}";
// The items the customer wants to buy
function initialize() {
document.querySelector("#payment-form").addEventListener("submit", handleSubmit);

// Fetches a payment intent and captures the client secret
elements = stripe.elements({clientSecret});
const paymentElement = elements.create("payment");
paymentElement.mount("#payment-element");
}

async function handleSubmit(e) {
e.preventDefault();
const {error} = await stripe.confirmPayment({
elements,
confirmParams: { // Make sure to change this to your payment completion page
return_url: "{{ url('purchase_payment_success',{'id': purchase.Id}) }}"
}
});


}

// Fetches the payment intent status after payment submission
async function checkStatus() {
const clientSecret = new URLSearchParams(window.location.search).get("payment_intent_client_secret");

if (! clientSecret) {
return;
}

const {paymentIntent} = await stripe.retrievePaymentIntent(clientSecret);

switch (paymentIntent.status) {
case "succeeded":
console.log("Payment succeeded!");
break;
case "processing":
console.log("Your payment is processing.");
break;
case "requires_payment_method":
console.log("Your payment was not successful, please try again.");
break;
default:
console.log("Something went wrong.");
break;
}
}

initialize();
checkStatus();
	</script>
{% endblock %}
